% stash addScripts => ['taskeditor'];
% my $input = stash 'input';
% my $id = stash 'id';
% my $bare_mode = stash 'bare';
% layout undef if $bare_mode;
% my $tree = stash('tree') // [];
% my $incr_prefix = stash 'incr_prefix';
% my ($prio_max, $prio_avg) = delete @{$_priodir}{'_max', '_avg'};
% my $steps = stash('steps') // { '' => { expoftime_share => 1, checks => 1, done => 0, subtask_data => {} } };
% my @priorities = map { [ $_, $_priodir->{$_} ] } sort { $_priodir->{$a} <=> $_priodir->{$b} } keys %$_priodir;
<p id="error-msg">
% if ( my $message = stash 'message' ) {
<%= $message %>
% }
</p>

% my $render_fieldset = begin
%     my $step = shift // {};
%     my $name = $step->{name};
<fieldset id="step-<%= $id // '_NEW_TASK_' %>-<%= $name %>" data-stepid="<%= $name %>">
    <legend>Edit task "<%= $id %>", <% if ( length $name ) { %>step <strong><%= $name %></strong><% } else { %>general and main step data<% } %></legend>
<dl class="fields">
% if ( my $std = $step->{subtask_data} ) {
% if ( !$name && $incr_prefix ) {
<dt>ID prefix</dt>
<dd class="input">
<p class="help">A name for a task is found automatically on creation. You may want to provide a prefix. If the prefix exists, an number is appended and incremented until the ID is unique. You may suggest the number where the incrementing is to start.</p>
<p class="input"><input name="incr_name_prefix"></p>
% }
<dt>Title</dt>
<dd class="input"><input type="text" value="<%= $std->{title} %>" name="title" ></dd>
<dt>Priority level</dt>
<dd><p class="help">Dedicate the maximum number you ever assigned (currently <%= $prio_max %>, average <%= sprintf '%.2f', $prio_avg %>) for first priority tasks only. Those tasks with that level will be no more first priority once you input an even higher level for this task.</p>
<p class="input"><% for ( @priorities ) { my ($label, $num) = @$_; %><label><input type="radio" name="priority" value="<%= $num %>" <%= $num == $std->{priority} ? 'checked' : '' %>><%= $label %></label><% } %><input type="radio" name="priority"><input type="number" min="1" value="<%= $std->{priority} %>"></p>
</dd>
<dt>Start date</dt>
<dd><p class="help">If it is now, just leave it empty.</p>
<p class="input"><input type="datetime" name="from_date" value="<%= $std->{from_date} %>"></p>
</dd>
<dt>Time stages</dt>
<dd><p class="help">Associate the task to a time track you can define and modify in the settings,  and specify the due date. You may also specify points of time when the task shall change the track.</p>
<div class="input">
<table class="time-stages">
<tr><th>Time track</th><th>until</th></tr>
% my $timeway = $std->{timeway} // [{ track => 'default' }];
% for my $stage ( @$timeway ) {
<tr><td><select name="track">
<option value="">-- Select suitable timetrack --</option>
% for my $track ( @$tracks ) {
<option value="<%= $track->[0] %>" <%= $stage->{track} eq $track->[0] ? q{selected=selected} : '' %>><%= $track->[1] %></option>
% }
</td><td><input class="until" type="datetime" name="until_date" value="<%= $stage->{until_date} %>"></td>
<td style="width:4em;"><button class="add-btn">+</button><button class="drop-btn">&minus;</button></td>
</tr>
% }
</table>
</div><dd>
% }
<dt>Description</dt>
<dd><p class="help">You can use Markdown syntax. Heading levels are automatically increased by 3.</p>
<div class="input"><textarea name="description" rows="5" style="width:90%"><%= $step->{description} %></textarea></div></dd>
<dt>Expenditure of time share</dt>
<dd><p class="help">By how much shall the completion of this step advance the overall progress?<br>
To estimate this value right, imagine the expenditure of time used by the superordinate step (or task, alternatively) as a pie to be shared with all subordinate steps incl. this one <em>and additionally</em> each of its own subordinate steps. The pieces are equal in size but of any number in total. However, you may allocate to this step more than one. When in doubt, better leave the default of 1.</p>
<p class="input">Allocate: <input type="number" name="expoftime_share" min="1" value="<%= $step->{expoftime_share} %>" /> piece of superordinate time share</p>
</dd>
<dt>Subordinate steps</dt>
<dd><p class="help">For naming steps the following characters are allowed: A-Z,a-z,0-9. If you want multiple steps, separate them by one of the following separators, depending on meaning:
<ul style="font-size:smaller;">
<li>Use <strong>/</strong> (slash) or <strong>|</strong> (vertical bar) to group steps among which the order of completion is irrelevant.</li><li>Separate steps or step groups by <strong>,</strong> (comma) to indicate that the order does matter.</li><li><strong>;</strong> (semicolon) instead of comma signals a final special group of steps not depending on any other one. Each is always displayed until completed.</li></ul>
<p><input type="text" name="substeps" value="<%= $step->{substeps} %>"></p></dd>
<dt>Step progress</dt>
<dd><p class="input"><br>
Number of checks: <input type="number" name="checks" size="2" min="0" value="<%= $step->{checks} %>" ><br>
Checked: <input type="range" min="0" max="<%= $step->{checks} %>" style="width:90%" name="done" value="<%= $step->{done} %>"></p></dd>
</fieldset>
% end

<form data-taskid="<%= $id // "_NEW_TASK_" %>" method='post' action="/task/<%= $id // 0 %>/post" class="taskeditor">

% for my $step (values %$steps) {
%=    $render_fieldset->($step);
% }

%= $render_fieldset->({ name => '_NEW_STEP_' });

<div style="float:left;">Jump to step: <select id="steps-for-<%= $id // "_NEW_TASK_" %>-tree" name="step">
% for my $step ( sort keys %$steps ) {
<option value="<%= $step %>"><%= $step %></option>
% }
</select></div>

% if ( !$bare_mode ) {
<div style="text-align:right;"><input type="submit" name="parse_json" value="Send"></div>

<p>Create or edit a task:</p>

<textarea cols="80" name="tfls"><%= $input // '' %></textarea><br>
<input type="submit" name="parse_tfls" value="Parse TreeFromLazyStr syntax">
</form>
% }


