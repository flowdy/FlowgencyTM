% my $input = stash 'input';
% my $id = stash 'id';
% my $tree = stash('tree') // [];
% my ($prio_max, $prio_avg) = delete @{$_priodir}{'_max', '_avg'};
% my $steps = stash('steps') // { '' => { expoftime_share => 1, checks => 1, done => 0, subtask_data => {} } };
% my @priorities = map { [ $_, $_priodir->{$_} ] } sort { $_priodir->{$a} <=> $_priodir->{$b} } keys %$_priodir;
% if ( my $message = stash 'message' ) {
<p><%= $message %></p>
% }

% my $render_fieldset = begin
%     my $step = shift // {};
%     my $name = $step->{name};
<fieldset id="step-<%= $name %>">
    <legend>Edit task "<%= $id %>", <% if ( length $name ) { %>step <strong><%= $name %></strong><% } else { %>general and main step data<% } %></legend>
<dl class="fields">
% if ( my $std = $step->{subtask_data} ) {
<dt>Title</dt>
<dd class="input"><input type="text" value="<%= $std->{title} %>" name="title" ></dd>
<dt>Priority level</dt>
<dd><p class="help">Dedicate the maximum number you ever assigned (currently <%= $prio_max %>, average <%= sprintf '%.2f', $prio_avg %>) for first priority tasks only. Those tasks with that level will be no more first priority once you input an even higher level for this task.</p>
<p class="input"><% for ( @priorities ) { my ($label, $num) = @$_; %><label><input type="radio" name="priority" value="<%= $num %>" <%= $num == $std->{priority} ? 'checked' : '' %>><%= $label %></label><% } %><input type="radio" name="priority"><input type="number" min="1" value="<%= $std->{priority} %>"></p>
</dd>
<dt>Start date</dt>
<dd><p class="help">If it is now, just leave it empty.</p>
<p class="input"><input type="datetime" name="from_date" value="<%= $std->{from_date} %>"></p>
</dd>
<dt>Time stages</dt>
<dd><p class="help">Associate the task to a time track you can define and modify in the settings,  and specify the due date. You may also specify points of time when the task shall change the track.</p>
<div class="input">
<table class="time-stages">
<tr><th>Time track</th><th>until</th></tr>
% my $track_cnt = 0;
% my $timeway = $std->{timeway} // [{ track => 'default' }];
% for my $stage ( @$timeway ) {
%     $track_cnt++;
<tr><td><select name="track-<%= $track_cnt %>">
% for my $track ( @$tracks ) {
<option value="<%= $track->[0] %>" <%= $stage->{track} eq $track->[0] ? "selected" : '' %>><%= $track->[1] %></option>
% }
</td><td><input type="datetime" name="until-<%= $track_cnt %>" value="<%= $stage->{until_date} %>"></td>
<td><button>+</button><button>&minus;</button></td>
</tr>
% }
</table>
</div><dd>
% }
<dt>Description</dt>
<dd><p class="help">You can use Markdown syntax. Heading levels are automatically increased by 3.</p>
<div class="input"><textarea name="description" rows="5" style="width:90%"><%= $step->{description} %></textarea></div></dd>
<dt>Expenditure of time share</dt>
<dd><p class="help">By how much shall the completion of this step advance the overall progress?<br>
This value is evaluated in relation to the superordinate step (or task, respectively) and steps both co- and directly subordinate. Do not change it with levity as you might have to adjust the expenditures of other steps, too. If in doubt, just leave the default of 1.</p>
<p class="input"><input type="number" name="expoftime_share" min="1" value="<%= $step->{expoftime_share} %>" /></p>
</dd>
<dt>Subordinate steps</dt>
<dd><p class="help">Substeps chain notation has special syntax:<br><strong>,</strong> comma separates groups. A group is displayed in the list of pending steps once all steps of preceding groups have been completed. Steps can be a group on their own,<br><strong>/</strong> A slash separates steps of the same group, you can make checks in any order,<br><strong>;</strong> a semicolon signals a final special group of steps not depending on any other one. Each is always displayed until completed.</p>
<p><input type="text" name="substeps" value="<%= $step->{substeps} %>"></p></dd>
<dt>Step progress</dt>
<dd><p class="input"><br>
Number of checks (slider stepping): <input type="number" name="checks" size="2" min="0" value="<%= $step->{checks} %>" ><br>
Checked: <input type="range" min="0" max="<%= $step->{checks} %>" style="width:90%" name="done" value="<%= $step->{done} %>"></p></dd>
</fieldset>
% end

<form data-taskid="<%= $id %>" method='post' action="/task/<%= $id // 0 %>/post" class="taskeditor">

% for my $step (values %$steps) {
%=    $render_fieldset->($step);
% }

<div style="float:left;">Jump to step: <select id="steps-tree" name="step">
% for my $step ( sort keys %$steps ) {
<option><%= $step %></option>
% }
</select></div>

<div style="text-align:right;"><input type="submit" name="parse_json" value="Send"></div>

<p>Create or edit a task:</p>

<textarea cols="80" name="tfls"><%= $input // '' %></textarea><br>
<input type="submit" name="parse_tfls" value="Parse TreeFromLazyStr syntax">
</form>

<script type="text/javascript">
FlowgencyTM.create_step_for_task = function (task, step_name) {
    var fieldset = $('<%== join "", split /\n/, $render_fieldset->() %>');
    fieldset.id += step_name;
    fieldset.find("legend").text("Describe new step " + step_name); 
    fieldset.appendTo(".taskeditor:[action^=/task/" + task + "]");
    FlowgencyTM.dynamize_taskeditor_step_fieldset(fieldset);
    return;
};
</script>


