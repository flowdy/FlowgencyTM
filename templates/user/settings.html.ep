% stash addScripts => ['user-settings'];
<h1>Change your User Profile settings</h1>

<p><a href="/help/user-settings">Help</a></p>

% my %error_fmt = ();
% my $place_error = begin
%    my $which = shift;
%    if ( my $error = $errors->{$which} ) {
%        $error =~ s{(?<![.!?])$}{.};
         <span style="color:red;"><%= ref $error ? do {
            my ($e, @args) = @$error; $error_fmt{$e}->(@args)
        } : $error %></span><br>
%    }
%    else { return; }
% end

% if ( %$errors ) {
  <p style="color:red">Form processing failed due to invalid fields:
     <%== join ", ", map { qq{<a href="#$_">$_</a>} } keys %$errors %>.
  </p>
% }

<form method="POST"><div id="update-settings-form">
<h2 id="authentication">User <%= $user->user_id %>: Authentification</h2><div>
<p class="info">If you run the server locally, you do not need to input anything here.</p>

<label style="display:block;"><input id="change-password" type="checkbox"> Change stored password</label>
<fieldset id="change-password-fieldset" disabled="disabled" style="display:none">
<table>
<tr><th><label for="#old-password">From</label></th><th><label for="#new-password">To</label></th><th><label for="#confirm-password">Confirm<label></th></tr>
<tr><td><input id="old-password" placeholder="old password" type="password" name="old_password"></label></td>
<td><input id="new-password" placeholder="new password" type="password" name="password"></td><td><input id="confirm-password" type="password" placeholder="repeat to confirm" name="passw_confirm"></td></tr>
</table>
%== $place_error->('password') || q{<p style="font-size:smaller">Leave these fields empty if you want to keep your stored password.</p>}; 
</fieldset>

<label><input type="checkbox" id="set-email" <%= defined($user->email) ? q{checked=checked} : q{} %> > The administrator is allowed to contact me e.g. for notifications on necessary modifications required by updates, and on new or substantially changed or dropped/deactivated features:</label>
<fieldset id="contact" <%= defined($user->email) ? q{} : q{disabled=disabled} %>>
<label>E-Mail: <input type="text" id="email" name="email" value="<%= param('email') // $user->email %>"></label>

<label>Name: <input type="text" name="username" value="<%= $user->username %>"></label>
%== $place_error->("email") || q{<p style="font-size:smaller;">Without the contact information, the account is subject to deletion when, due to updates, it would not work any longer without adjustments.</p>};
</fieldset>

</div>

<h2 id="set-weights">Weights of the ranking criteria</h2>
<div>
<table id="set-weights-table">
% my @hints = ( priority => "cf. Priority levels", due => "The less net seconds are available, the more urgent is the task. Because of that reverse linear relationship, this weight should be negative.", drift => "Drift between time progress and progress of your checking steps as done. This is additionally visualized by a variadic colour gradient under the task title.", open => "If and for how long the task has been open", timeneed => "When the task will be done as compared to when you planned it should be done. This is inferred from your average working speed once you make the first check.");
% while ( my ($key, $hint) = splice @hints, 0, 2 ) {
%   my $value = $weights->{$key};
    <tr><th><label for="#weight-<%= $key %>"><%= $key %></th><td><input style="width:2.5em;" name="weight[<%= $key %>]" id="weight-<%= $key %>" <%= $value > 0 ? 'min=0' : $value < 0 ? 'max=0' : '' %> value="<%= $value %>"></td><td><%= $hint %></li>
% }
</table>
</div>

<h2 id="set-priorities">Priority levels</h2>
<div>
% my @chain;
% while ( my ($label, $number) = each %$priorities ) {
%   $chain[$number] = $label;
% }
% shift @chain;
% for my $l ( @chain ) {
%     next if defined $l;
%     $l = '';
% }
% my $value = join ",", @chain;
<span><input type="text" name="priorities" value="<%= $value %>" style="width:100%;box-sizing:border-box;"></span>
%
</div>

<h2 id="configure-time-model">Time Model</h2><div>
<input name="time_model_changes" type="hidden">
% my @trackfields = qw(label week_pattern week_pattern_of_track unmentioned_variations_from force_receive_mode default_inherit_mode from_earliest until_latest successor);
% my @varfields = qw(description week_pattern week_pattern_of_track section_of_track ref apply from_date until_date inherit_mode);
% my @tracks = sort { $time_model->{$a}{label} cmp $time_model->{$b}{label} } keys %$time_model;

<div id="track-definitions">
% for my $track_name ( @tracks ) {
%     my $track = $time_model->{$track_name};
%     $_ = join q{, }, @$_ for $track->{unmentioned_variations_from} // ();
% my @trackfields = @trackfields;
% delete $track->{name};
% my ($fe,$ul) = @{$track}{'from_earliest','until_latest'};
%#my $class = (defined $fe && $fe->is_future) ? 'future'
%#          : (defined $ul && $ul->is_past)   ? 'past'
%#          :                                   'present'
%#          ;
<div class="vtab" data-name="<%= $track_name %>">
<div class="fill-in <%# $class %>" id="<%= $track_name %>-fill-in">
% my $variations = delete $track->{variations} // [];
% my @available_trackfields;
% while ( my $key = shift @trackfields ) {
%     my $value = $track->{$key} // do {
%         push @available_trackfields, $key;
%         next;
%     };    
<dfn class="property" title="<%= $key %>" data-orig-value="<%= $value %>"><%= $value %></dfn>
% }
<div class="undefined-properties" title="Other available properties"><%== join " ", map { qq{<a href="javascript:void(0);">$_</a>} } @available_trackfields %></div>
</div>
% if ( @$variations ) {
<h3>Variations</h3>
<ul class="variations">
% for my $var ( @$variations ) {
%#    my $class = $var->{ from_date  }->is_future ? 'future'
%#              : $var->{ until_date }->is_past   ? 'past'
%#              :                                   'present'
%#              ;
%     my @varfields = @varfields;
%     my @available_varfields;
%     my $vname = delete $var->{name} // "";
      <li data-name="<%= $vname %>" class="variation <%# $class %>"><span><strong title="name"><%= $vname %></strong>: </span>
%     while ( my $key = shift @varfields ) {
%         my $value = $var->{$key} // do {
%             push @available_varfields, $key;
%             next;
%         };    
          <dfn title="<%= $key %>" class="property" data-orig-value="<%= $value %>"><%= $value %></dfn>
%     }
      <div class="undefined-properties" title="Other available properties">
      <%== join " ", map { qq{<a href="javascript:void(0);">$_</a>} } @available_varfields %></select>
      </div>
      </li>
% }
</ul>
% }

</div>
% }
</div>
<p>Create: <input placeholder="Name" type="text" id="extend-time-model-name">
be a new
<span class="btn-row">
<button id="create-track-btn">track</button>
<button id="add-variation-btn">variation of current track</button></p>
</span>

<div id="configure-timemodel-prototypes">
     <div class="track label" title="Track label" >The track label should describe the work situation in which it is used, e.g. the job, the shift or the project. It is displayed in the select for the time track in the task editor:
     <p><label>Label of track: <input type="text"></label></p>
     </div>
     <div class="track variation week_pattern" title="Pattern of week rhythm">For the track or variation, define the regular pattern of alternations between working and still time. You can differentiate intervals based on the calendar week number (ISO scheme, not US legacy), and of course the week days.<br>For the time of day part, prefer full (1/1), halfs (1/2 = :30), thirds (1/3 = :20, :40), or quaters (1/4 = :15, :45) over even smaller shares of the hour.<br>For full hours, you can omit the minute part, and even the until time part if you want to indicate a single hour, say the lunch break ("!12").
     <input>
     </div>
     <div class="track variation inherit_mode force_inherit_mode default_inherit_mode" title="?">
         <header>
            <p class="inherit_mode" title="Mode of inheritance">How the variation is inherited:</p>
            <p class="force_inherit_mode" title="Force mode of inheritance">Force any implicit variations from other tracks to inherit_mode:</p>
            <p class="default_inherit_mode" title="Default mode of inheritance">Inherit mode of variations for which nothing special is indicated:</p>
         </header><ul class="radioptions">
            <li><label><input type="radio" value="optional">optional, i.e. ignored unless 'ref'erenced explicitly</label></li>
            <li><label><input type="radio" value="suggest">suggest, induce between middle and bottom variations</label></li>
            <li><label><input type="radio" value="impose">impose, induce between middle and top variations</label></li>
         </ul>
     </div>
     <div class="variation apply"><p>How the variation will be applied:</p><ul class="radioptions">
            <li><label><input type="radio" value="middle"> in the <strong>middle</strong> between suggest and imposed inherited variations</label></li>
            <li><label><input type="radio" value="bottom"> <strong>bottom</strong>, i.e. below suggested variations</label></li>
            <li><label><input type="radio" value="top"> <strong>top</strong>, i.e. above imposed variations</label></li>
            <li><label><input type="radio" value="ignore">ignore variation (delete unless inherited)</li>
          </ul>
     </div>
     <div class="variation description" title="Describe variation">Short description of the variation for your later information: <input></div>
     <div class="variation from_date until_date" title="Position variation">
          <header>
            <p class="from_date" title="Variation starts from date">Define where the variation gets passed over from the track fill-in or the directly preceeding variation if any.</p>
            <p class="until_date" title="Variation ends until date">Define where the variation will pass over to the track fill-in or the directly succeeding variation if any.</p>
          </header>
          <p>Please input (s. its tooltip on formats) or use the date picker: <input></p>
     </div> 
     <div class="track from_earliest until_latest" title="Position variation">
          <header>
            <p class="from_earliest" title="Track available from">Define from when the track can be used. If another track preceeds this one, it need not have defined an until_latest value but can use this.</p>
            <p class="until_latest" title="Track available until">Define until when the track can be used, or respectively when it will pass over to a successor if any is defined.</p>
          </header>
          <p>Please input (s. tooltip on formats) or use the date picker: <input></p>
     </div> 
     <div class="track unmentioned_variations_from" title="unmentioned variations from">
          <p>Tracks can reuse variations by hierarchical relation to other tracks so you do not need to copy them between and to keep in sync. The value "private" is safe and tested and best used for tracks on which the holiday variations defined in "private" track. This feature is experimental.</p>
          <p>Track(s) from which to inherit variations: <input value="private"></p>
     </div>
     <div class="track successor">
          <p>You can define that the track passes over to another when either its own until_latest or the other track's from_earliest limit is reached. If both dates are set, make sure they do not interlace because chained tracks cannot overlap.</p>
          <p>Track: <input></p>
     </div>     
     <div class="variation track week_pattern_of_track">
          <p>Reuse fill-in week pattern of track: <input></p>
     </div>
     <div class="variation section_of_track">
          <p>This variation be a section of track: <input></p>
     </div>
     <div class="variation ref">
          <p>Reuse properties from <input placeholder="variation">. Pleasure make sure yourself that this variation is actually inherited, until the required logic is implemented. If it is not, an error is thrown.</p>
     </div>
</div>
</div>

<h2 id="appendix">Urgency threshold for closed tasks</h2><div>
<p>Currently <strong id="coefficient-c-value"><%= $user->appendix %></strong>: <input style="vertical-align:middle;margin:0;width:80%" name="appendix" type="range" max="1" min="0" step="0.05" value="<%= $user->appendix %>" onchange='$("#coefficient-c-value").text(Number(this.value).toFixed(2));'>.</p>

</div>
</div>
<p class="btn-row">
<button type="submit" name="update" value="1">Update Profile</button>
<button type="reset">Discard changes</button>
</p>
</form> 

<p>Further functions:</p>
<ul>
% if ( $user->can_admin ) {
<li><a href="/admin">Administration dash</a></li>
% }
% else {
<li><a href="/user/delete">Good-bye survey and account deletion</a></li>
% }
</ul>
